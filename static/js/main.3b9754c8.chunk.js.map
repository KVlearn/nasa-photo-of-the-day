{"version":3,"sources":["Components/DateInput.js","Components/GetImage.js","Components/MoreInfo.js","Components/CheckandLoad.js","App.js","index.js"],"names":["DateInput","updateChosenDate","useState","myDate","style","margin","textAlign","placeholderText","selected","dateFormat","onChange","date","reformattedDate","moment","format","console","log","GetImage","mediaType","imageUrl","Image","src","fluid","alt","height","id","url","width","window","innerWidth","innerHeight","playing","MoreInfo","info","infoOn","setInfoOn","backgroundColor","color","fontSize","borderRadius","paddingBottom","transition","variant","onClick","CheckandLoad","data","loading","fontFamily","fontStyle","title","display","justifyContent","explanation","media_type","copyright","App","setData","chosenDate","setChosenDate","setLoading","useEffect","axios","get","then","res","catch","err","Card","className","flexDirection","role","aria-label","inputDate","ReactDOM","render","document","getElementById"],"mappings":"2PA2BeA,MApBf,YAAuC,IAAnBC,EAAkB,EAAlBA,iBAAkB,EACNC,mBAAS,IADH,mBAC3BC,EAD2B,KAElC,OAFkC,KAGlC,yBAAKC,MAAO,CAAEC,OAAO,OAAOC,UAAU,SAAtC,qBAEA,kBAAC,IAAD,CACCC,gBAAgB,8BAChBC,SAAUL,EACVM,WAAW,aACXC,SAAU,SAAAC,GACP,IAAIC,EAAkBC,IAAOF,GAAMG,OAAO,cAC1CC,QAAQC,IAAI,MAAMJ,GAClBX,EAAiBW,Q,yBCEVK,MAjBf,YAAwC,IAArBC,EAAoB,EAApBA,UAAUC,EAAU,EAAVA,SAEzB,OACI,6BACiB,UAAZD,GAAwB,kBAACE,EAAA,EAAD,CAAOC,IAAKF,EAAUG,OAAK,EAACC,IAAI,WAAWC,OAAO,SAE9D,UAAZN,GAAyB,kBAAC,IAAD,CACtBO,GAAG,WACHC,IAAKP,EACLQ,MAAOC,OAAOC,WACdL,OAAQI,OAAOE,YACfC,SAAO,MCkBRC,MA9Bf,YAA0B,IAAPC,EAAM,EAANA,KACnBlB,QAAQC,IAAI,SAASiB,GADI,MAEA/B,oBAAS,GAFT,mBAElBgC,EAFkB,KAEXC,EAFW,OAGUjC,mBAAS+B,GAHnB,mBASzB,OATyB,UAUzB,6BACA,+CACGC,GACC,uBAAG9B,MAAO,CAACE,UAAU,OAAO8B,gBAAgB,YACzCH,GAEL,6BACA,4BACG7B,MAAO,CAACiC,MAAM,YAAYC,SAAS,OAAOC,aAAa,MAAMC,cAAc,MAAMC,WAAW,kBAC5FhB,GAAG,SACHiB,QAAQ,iBACRC,QAhBc,WACjBR,GAAWD,KAgBTA,EAAS,OAAS,OALpB,cAMY,OCSCU,MA7Bf,YAAuD,IAAhCC,EAA+B,EAA/BA,KAAKC,EAA0B,EAA1BA,QAAQ7C,EAAkB,EAAlBA,iBAChC,OAAI6C,EACI,8DAIR,6BACA,oCAAUD,EAAKlC,MACf,wBAAIP,MAAO,CAAE2C,WAAY,YAAaC,UAAU,UAAUV,SAAS,OAAOjC,OAAO,WAAYwC,EAAKI,OAElG,yBAAK7C,MAAO,CAAC8C,QAAQ,OAAQC,eAAe,SAC5C,kBAAC,EAAD,CACAlD,iBAAkBA,IAElB,kBAAC,EAAD,CACCgC,KAAMY,EAAKO,eAIZ,kBAAC,EAAD,CACEjC,SAAU0B,EAAKnB,IACfR,UAAW2B,EAAKQ,aAElB,2CAAiBR,EAAKS,a,iBCsBXC,MA7Cf,WAAgB,IAAD,EACQrD,mBAAS,IADjB,mBACN2C,EADM,KACDW,EADC,OAGoBtD,mBAAS,IAH7B,mBAGNuD,EAHM,KAGKC,EAHL,OAIcxD,oBAAS,GAJvB,mBAIN4C,EAJM,KAIEa,EAJF,KA8Bb,OAxBAC,qBAAU,WAERD,GAAW,GACXE,IACCC,IADD,oGACkGL,IACjGM,MAAK,SAAAC,GACJjD,QAAQC,IAAIgD,EAAInB,MAChBW,EAAQQ,EAAInB,MACZc,GAAW,MAEZM,OAAM,SAAAC,GACPnD,QAAQC,IAAI,0BAA0BkD,QAKtC,CAACT,IASD,kBAACU,EAAA,EAAD,CAAM/D,MAAO,CAACgC,gBAAgB,UAC9B,yBAAKgC,UAAU,MAAMhE,MAAO,CAACC,OAAO,SAAUgC,MAAM,YAAYa,QAAQ,OAAQmB,cAAc,WAC5F,wDAC2B,0BAAMC,KAAK,MAAMC,aAAW,OAA5B,iBAE3B,kBAAC,EAAD,CACA1B,KAAMA,EACNC,QAASA,EACT7C,iBAbJ,SAA0BuE,GACxBd,EAAcc,SC5BlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3b9754c8.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\n\r\n \r\n\r\nfunction DateInput({updateChosenDate}){\r\n    const [myDate, setMyDate] = useState(\"\");\r\n    return(\r\n    <div style={{ margin:\"50px\",textAlign:\"left\"}}>\r\n    Choose Your Date :\r\n    <DatePicker\r\n     placeholderText=\"Click to choose your Date !\"\r\n     selected={myDate}\r\n     dateFormat=\"yyyy-MM-dd\" \r\n     onChange={date => {\r\n        let reformattedDate = moment(date).format('YYYY-MM-DD');\r\n        console.log('rd=',reformattedDate)\r\n        updateChosenDate(reformattedDate);}\r\n    }\r\n    />\r\n\r\n    </div>    \r\n    )\r\n }\r\n\r\nexport default DateInput;","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nfunction GetImage({mediaType,imageUrl}){\r\n/*For media Type image, display with img.For video display with ReactPlayer*/\r\n    return(\r\n        <div>\r\n            {mediaType===\"image\" && (<Image src={imageUrl} fluid alt=\"NASA APD\" height=\"auto\"/>)}\r\n            \r\n            {mediaType===\"video\"  && (<ReactPlayer \r\n                id=\"imageUrl\"\r\n                url={imageUrl}\r\n                width={window.innerWidth}\r\n                height={window.innerHeight}\r\n                playing\r\n            />)}\r\n       </div>    \r\n    )\r\n}   \r\n\r\nexport default GetImage;\r\n","import React,{useState} from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction MoreInfo({info}){\r\nconsole.log('data==',info)\r\nconst [infoOn,setInfoOn]=useState(false);\r\nconst [explanation,setExplanation]=useState(info);\r\n\r\nconst toggleInfo = () => {\r\n  setInfoOn(!infoOn);\r\n  };\r\n\r\nreturn(\r\n<div>\r\n<h5>More info here!</h5>\r\n  {infoOn && \r\n    <p style={{textAlign:\"left\",backgroundColor:\"#080808\"}}>\r\n      {info}</p>\r\n  }\r\n  <div>\r\n  <button \r\n     style={{color:\"indianred\",fontSize:\"18px\",borderRadius:\"5px\",paddingBottom:\"2px\",transition:\"ease-in-out 3s\"}}\r\n     id='expand'\r\n     variant=\"outline-danger\"\r\n     onClick={toggleInfo} \r\n  >{infoOn ? 'Hide' : 'Show'} More Info\r\n    </button>{' '}\r\n  </div>\r\n</div>\r\n)\r\n\r\n}\r\n\r\nexport default MoreInfo;","import React from \"react\";\r\nimport DateInput from './DateInput';\r\nimport GetImage from './GetImage';\r\nimport MoreInfo from './MoreInfo';\r\n\r\n\r\nfunction CheckandLoad({data,loading,updateChosenDate}){\r\n    if (loading)\r\n    return  <h2>Still loading...Please wait ! </h2>    \r\n    else\r\n    {\r\n    return(\r\n    <div >\r\n    <h4>Date:{data.date}</h4>\r\n    <h2 style={{ fontFamily: \"Helvetica\", fontStyle:\"oblique\",fontSize:\"32px\",margin:\"0 auto\"}}>{data.title}</h2>\r\n\r\n    <div style={{display:\"flex\", justifyContent:\"left\"}} >\r\n    <DateInput\r\n    updateChosenDate={updateChosenDate}\r\n    />\r\n    <MoreInfo\r\n     info={data.explanation} \r\n    />\r\n    {/* <span>---</span> */}\r\n    </div>\r\n    <GetImage \r\n      imageUrl={data.url}\r\n      mediaType={data.media_type}\r\n    />\r\n    <h5>Copyright : {data.copyright}</h5>\r\n    </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default CheckandLoad;","import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CheckandLoad from './Components/CheckandLoad';\r\nimport \"./App.css\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction App() {\r\n  const [data,setData]=useState('');\r\n  //const [chosenDate,setChosenDate]=useState('2020-01-01');\r\n  const [chosenDate,setChosenDate]=useState('');\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  useEffect(()=>{\r\n    const fetchData=()=>{\r\n    setLoading(true);\r\n    axios\r\n    .get(`https://api.nasa.gov/planetary/apod?api_key=xP5hHMTZkcMEL8Vkrfa0cELocITNG25j6YP2e9m8&date=${chosenDate}`)\r\n    .then(res=>{\r\n      console.log(res.data);\r\n      setData(res.data);\r\n      setLoading(false);\r\n    })\r\n    .catch(err=>{\r\n    console.log('Ops Error in axios call',err)\r\n    })  \r\n    }\r\n\r\n    fetchData();\r\n  },[chosenDate]); /* when to reload ? when the chosenDate changes!*/\r\n  \r\n  //Functions\r\n  /*To update the ChosenDate in the axios call to the date from User*/\r\n  function updateChosenDate(inputDate){\r\n    setChosenDate(inputDate);\r\n  }\r\n\r\n  return (\r\n    <Card style={{backgroundColor:\"black\"}}>\r\n    <div className=\"App\" style={{margin:'0 auto', color:'indianred',display:'flex', flexDirection:\"column\"}}>\r\n      <h1>\r\n        NASA Picture of the Day !<span role=\"img\" aria-label='go!'>ðŸš€</span>\r\n      </h1>\r\n      <CheckandLoad \r\n      data={data}\r\n      loading={loading}\r\n      updateChosenDate={updateChosenDate}/>\r\n    </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}